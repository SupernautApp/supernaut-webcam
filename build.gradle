plugins {
    id 'org.asciidoctor.jvm.convert'        version '3.3.2'
    id 'com.github.hierynomus.license'      version '0.16.1' apply false
}

buildScan {
    if (System.getenv('CI')) {
        publishAlways()
        tag 'CI'
    }
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

allprojects {
    apply plugin: 'java'

    version = webcamVersion     // set in gradle.properties
    group = 'app.supernaut.fx.webcam'

    repositories {
        mavenCentral()
        maven { url 'https://gitlab.com/api/v4/projects/26584840/packages/maven' }  // SupernautFX
        maven { url 'https://jitpack.io' }                                          // Modified BridJ
    }
}

subprojects {
    apply plugin: 'groovy'
    /*
     * Supernaut.FX Webcam will target recent JDK versions. For now library modules will
     * target JDK 11 and sample apps will be built using JDK 17.
     * We want to focus on jpackage'd apps and these should always use recent JDK.
     */
    sourceCompatibility = 11
    targetCompatibility = 11

    dependencies {
        implementation "org.slf4j:slf4j-api:${slf4jVersion}"

        testImplementation "org.codehaus.groovy:groovy:${groovyVersion}:"
        testImplementation("org.spockframework:spock-core:${spockVersion}") {
            exclude module: "groovy-all"
        }

        testRuntimeOnly "net.bytebuddy:byte-buddy:1.8.21"                 // allows Spock to mock classes (in addition to interfaces)
        testRuntimeOnly "org.objenesis:objenesis:2.6"                     // Allow Spock to mock classes with constructor arguments
        testRuntimeOnly  "org.slf4j:slf4j-jdk14:${slf4jVersion}"          // Runtime implementation of slf4j
    }

    compileJava {
        options.compilerArgs << '-Xlint:deprecation' << '-Xlint:unchecked'
    }
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

build.dependsOn subprojects.build

task buildCI(dependsOn: [build])

task buildJPackages(dependsOn: [buildCI])

apply from: 'gradle/licenseCheck.gradle'
